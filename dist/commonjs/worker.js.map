{"version":3,"sources":["../src/worker.ts"],"names":[],"mappings":";;AACA,qCAAoC;AACpC,2CAA6D;AAG7D,IAAI,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;AAC5B,IAAI,WAAW,GAAI,KAAK,CAAC;AAEzB,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,GAAmB;IAE/C,WAAW,GAAG,GAAG,CAAC,WAAW,IAAI,KAAK,CAAC;IAEvC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAGf,KAAK,0BAAa,CAAC,WAAW;YAC1B,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;gBACd,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;YACzE,CAAC;YAED,KAAK,CAAC;QAGV,KAAK,0BAAa,CAAC,WAAW;YAC1B,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAEvC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC;gBAC9B,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;YACrD,CAAC;YAED,KAAK,CAAC;IACd,CAAC;AACL,CAAC,CAAC,CAAC","file":"worker.js","sourcesContent":["// typechecker\nimport { Checker } from './checker';\nimport { WorkerCommand, IWorkerOptions } from './interfaces';\n\n// create checker instance\nlet checker = new Checker();\nlet hasCallback  = false;\n// listen for messages\nprocess.on('message', function (msg: IWorkerOptions) {\n    // set if callback is awaited\n    hasCallback = msg.hasCallback || false;\n\n    switch (msg.type) {\n\n        // tell checker to inspect code\n        case WorkerCommand.inspectCode:\n            if (msg.options) {\n                checker.inspectCode(msg.options);\n            } else {\n                throw new Error('You tried to inspect code without ts/lint options');\n            }\n\n            break;\n\n        // tell checker to print result\n        case WorkerCommand.printResult:\n            let result = checker.printResult(true);\n\n            if (process.send && hasCallback) {\n                process.send({ type: 'result', result: result });\n            }\n\n            break;\n    }\n});\n"],"sourceRoot":"src/"}